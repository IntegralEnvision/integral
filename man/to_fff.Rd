% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/excel_custom_formatting.R
\name{to_fff}
\alias{to_fff}
\title{Generate flatfile from crosstabbed (pivotted) data stored in an Excel spreadsheet.}
\source{
Some of the syntax and inspiration for this function comes from the
python library \code{un-xtab} \url{https://un-xtab.readthedocs.io/}
}
\usage{
to_fff(dat, my_vals, my_cols, my_hrow, hrows, drows = NULL, dcols = NULL, to_fill = NULL, gname = NULL, hdate = NULL)
}
\arguments{
\item{dat}{Unformatted dataframe containing crosstabbed data.}

\item{my_vals}{Character or numeric vector specifying the data columns to be preserved (see \code{row_headers}). Supplying a named vector will add column names.}

\item{my_cols}{Either: a) Character vector with names of repeated columns (e.g. \code{c("result", "qualifier")}); or b) Numeric value specifying (see \code{column_group_count})}

\item{my_hrow}{Numeric value specifying header row to get names for vals/cols (should not be included in \code{hrows}; see \code{row_headers_row})}

\item{hrows}{Numeric vector specifying the rows containing column headers (see \code{column_header_rows}). Supplying a named vector will add column names.}

\item{drows}{Numeric vector or list of numeric vectors specifying the rows containing data (see \code{data_rows}). Supplying a named list will add column for group name (arg \code{gname}).}

\item{dcols}{Numeric vector specifying the columns containing data (see \code{data_columns})}

\item{to_fill}{Character or numeric vector specifying header rows to fill down (e.g. merged cells)}

\item{gname}{Character value specifying the name of grouped data column}

\item{hdate}{Character value specifying the name of a header column to transform to date}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
to_fff(dat, my_vals = 1:2, my_cols = 2, hrows = 2:5)
to_fff(dat, my_vals = c(analyte = 1, units = 2), my_cols = c('result', 'qualifiers'), hrows = c(location_id = 2, sample_depth = 3, sample_date = 4, lab_id = 5), drows = drows, dcols = 3:198, gname = 'analyte_group', hdate = 'sample_date')
}
